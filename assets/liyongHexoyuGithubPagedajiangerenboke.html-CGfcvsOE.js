import{_ as l,c as o,a as s,e as n,b as t,f as i,o as r,r as d}from"./app-BK_1EPaG.js";const p={},u={href:"https://yihui.org/",target:"_blank",rel:"noopener noreferrer"},c={href:"https://tang-jay.github.io/cn/2022/06/17/glimpse/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},b={href:"http://localhost:4000/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://username.github.io",target:"_blank",rel:"noopener noreferrer"},v={href:"http://localhost:4000/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://hexo.io/zh-cn/docs/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://hexo.io/themes/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.haomwei.com/technology/maupassant-hexo.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://obsidian.md/",target:"_blank",rel:"noopener noreferrer"},j={class:"footnotes"},w={class:"footnotes-list"},H={id:"footnote2",class:"footnote-item"},E={href:"https://blog.csdn.net/qq_42951560/article/details/123596899",target:"_blank",rel:"noopener noreferrer"},B={id:"footnote3",class:"footnote-item"},G={href:"https://jdhao.github.io/2017/10/06/hexo-markdown-latex-equation/",target:"_blank",rel:"noopener noreferrer"},N={id:"footnote4",class:"footnote-item"},O={href:"https://fanlumaster.github.io/2021/03/22/Hexo-NexT-%E4%BD%BF%E7%94%A8-pandoc-%E6%8F%92%E4%BB%B6%E6%B8%B2%E6%9F%93%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/#:~:text=%E6%98%BE%E7%84%B6%EF%BC%8Cpan",target:"_blank",rel:"noopener noreferrer"};function q(P,e){const a=d("ExternalLinkIcon");return r(),o("div",null,[e[52]||(e[52]=s("h1",{id:"利用hexo与githubpage搭建个人博客",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#利用hexo与githubpage搭建个人博客"},[s("span",null,"利用Hexo与GithubPage搭建个人博客")])],-1)),s("p",null,[e[2]||(e[2]=n("一次偶然的机会，遇到了")),s("a",u,[e[0]||(e[0]=n("Yihui Xie | 谢益辉")),t(a)]),e[3]||(e[3]=n("大佬的博客，第一反应是简洁！漂亮！能在一个世外桃源一般的地方表达自己，就像")),s("a",c,[e[1]||(e[1]=n("初遇本站架构 - Tan Jay | 唐 洁 (tang-jay.github.io)")),t(a)]),e[4]||(e[4]=s("sup",{class:"footnote-ref"},[s("a",{href:"#footnote1"},"[1]"),s("a",{class:"footnote-anchor",id:"footnote-ref1"})],-1)),e[5]||(e[5]=n("里面所说，“我的心被狙中了”！一阵莫名的冲动让我想建立一个自己的博客。"))]),e[53]||(e[53]=s("p",null,"于是趁不多闲余时间，大约花了一个下午的时间把本站构建起来，效率算高。总体来说难度不算大，因此总结一下踩到的坑和帮助过我的资料。",-1)),e[54]||(e[54]=s("h2",{id:"_1-准备工作",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-准备工作"},[s("span",null,"1. 准备工作")])],-1)),e[55]||(e[55]=s("h3",{id:"_1-1-本地环境",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-1-本地环境"},[s("span",null,"1.1 本地环境")])],-1)),e[56]||(e[56]=s("p",null,"在开始之前，请确保安装以下软件：",-1)),s("ul",null,[s("li",null,[e[7]||(e[7]=n("Git: ")),s("a",m,[e[6]||(e[6]=n("https://git-scm.com/")),t(a)])]),s("li",null,[e[9]||(e[9]=n("Node.js: ")),s("a",h,[e[8]||(e[8]=n("http://nodejs.cn/")),t(a)])])]),e[57]||(e[57]=i(`<p>按照提示直接安装即可。安装完毕以后，可以在 cmd 里面通过以下命令检查是否安装成功：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">node</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token function">npm</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token function">git</span> <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正确安装会输出版本号信息。</p><h3 id="_1-2-本地-ssh-连接-github" tabindex="-1"><a class="header-anchor" href="#_1-2-本地-ssh-连接-github"><span>1.2 本地 ssh 连接 Github</span></a></h3><p>使用 ssh 连接至 github 是程序员最基本的操作，首先先确保自己拥有 github 账号。</p><p>打开 cmd 或者 powershell 面板，输入以下命令配置本机 ssh：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;邮件地址&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>连续回车后最终会生成文件至<code>C:\\Users\\用户名\\.ssh\\</code>中。找到<code>.ssh\\id_rsa.pub</code>文件，用记事本打开并复制里面的内容，打开你的 github 主页，进入<code>Settings</code>-&gt;<code>SSH and GPG keys</code>-&gt;<code>New SSH key</code>：</p><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/ssh.png" alt=""></p><p>将<code>id_rsa.pub</code>里面的内容到复制到<code>Key</code>中即可。</p><p>随后使用以下命令进行连接测试：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>出现以下提示词即为连接成功：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Hi &lt;你的用户名&gt;! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果出现</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">ssh: connect to host github.com port 22: Connection timed out.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>则尝试更改端口号为 443。即在先前<code>C:\\Users\\用户名\\.ssh\\</code>目录下新建<code>config</code>文件，用记事本打开，输入：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Host github.com</span>
<span class="line">  User git</span>
<span class="line">  HostName ssh.github.com</span>
<span class="line">  PreferredAuthentications publickey</span>
<span class="line">  IdentityFile ~/.ssh/id_rsa</span>
<span class="line">  Port 443</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再尝试用<code>ssh -T git@github.com</code>测试，基本能解决问题。</p><h2 id="_2-网站部署" tabindex="-1"><a class="header-anchor" href="#_2-网站部署"><span>2. 网站部署</span></a></h2><h3 id="_2-1-hexo-本地部署" tabindex="-1"><a class="header-anchor" href="#_2-1-hexo-本地部署"><span>2.1 Hexo 本地部署</span></a></h3><p>本地环境部署完成后，hexo 的部署非常简单！</p><p>首先进入 cmd 窗口输入指令安装 hexo：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建一个目录，例如<code>D:/blog</code>，进入该目录中，输入</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo init</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果配置成功，命令行输入：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo s</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,28)),s("p",null,[e[11]||(e[11]=n("默认会在 ")),s("a",b,[e[10]||(e[10]=n("http://localhost:4000/")),t(a)]),e[12]||(e[12]=n(" 构建网页，初始会看到："))]),e[58]||(e[58]=i(`<p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/hexo_init.png" alt=""></p><h3 id="_2-2-hexo-部署至-github" tabindex="-1"><a class="header-anchor" href="#_2-2-hexo-部署至-github"><span>2.2 Hexo 部署至 Github</span></a></h3><p>首先在 Github 中创建新的仓库，命名为<code>&lt;username&gt;.github.io</code>。注意此处 <code>username</code> 需要区分大小写</p><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250723173714488.png" alt="image.png"></p><p>我们再安装  <code>hexo-deployer-git</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后修改 Hexo 目录下的<code>_config.yml</code>文件：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">deploy</span><span class="token punctuation">:</span></span>
<span class="line">  type<span class="token punctuation">:</span> git</span>
<span class="line">  repo<span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>&lt;username<span class="token punctuation">&gt;</span>/&lt;username<span class="token punctuation">&gt;</span>.github.io.git</span>
<span class="line">  branch<span class="token punctuation">:</span> master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完成后运行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,10)),s("p",null,[e[14]||(e[14]=n("稍等片刻访问 ")),s("a",g,[e[13]||(e[13]=n("https://username.github.io")),t(a)]),e[15]||(e[15]=n(" 即可看到页面。"))]),e[59]||(e[59]=i(`<h3 id="_2-3-常用命令" tabindex="-1"><a class="header-anchor" href="#_2-3-常用命令"><span>2.3 常用命令</span></a></h3><p>在生成的 Hexo 目录中，目录结构为</p><ul><li><code>node_modules</code>：依赖包</li><li><code>public</code>：存放生成的页面</li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题</li><li><code>_config.yml</code>: 博客的配置文件</li></ul><p>其中所有文章会存放于<code>source/_posts</code>之下，如果要写文章可以在命令行输入：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo new post <span class="token string">&quot;My New Post&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此时会调用<code>scaffolds/post.md</code>模板，自动在<code>source/_posts</code>中生成<code>My New Post.md</code>文件。实际上，也可以自己手动创建，只需将注意配置好 md 文件中的头信息即可。</p><p>在 Hexo 中构建和发布网页只需熟悉以下几个命令即可：</p><ul><li>清理页面缓存</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo clean</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>编译页面</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo generate</span>
<span class="line">hexo g</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,11)),s("ul",null,[s("li",null,[e[17]||(e[17]=n("建立本地服务器，默认地址为 ")),s("a",v,[e[16]||(e[16]=n("http://localhost:4000/")),t(a)])])]),e[60]||(e[60]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo server</span>
<span class="line">hexo s</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>部署到远程服务器</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hexo deploy</span>
<span class="line">hexo d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),s("p",null,[e[19]||(e[19]=n("更多信息可以访问 ")),s("a",f,[e[18]||(e[18]=n("Hexo 官方文档")),t(a)]),e[20]||(e[20]=n("。"))]),e[61]||(e[61]=s("h2",{id:"_3-个性化配置",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-个性化配置"},[s("span",null,"3. 个性化配置")])],-1)),e[62]||(e[62]=s("h3",{id:"_3-1-主题选择",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-1-主题选择"},[s("span",null,"3.1 主题选择")])],-1)),s("p",null,[e[22]||(e[22]=n("可以在")),s("a",k,[e[21]||(e[21]=n("Hexo 主题官网")),t(a)]),e[23]||(e[23]=n("浏览心仪的主题，访问对应 github 仓库，使用")),e[24]||(e[24]=s("code",null,"git clone",-1)),e[25]||(e[25]=n("进行下载。以本站的 Maupassant 为例（不希望你和我撞车！）："))]),e[63]||(e[63]=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),s("p",null,[e[27]||(e[27]=n("然后编辑 Hexo 目录下的")),e[28]||(e[28]=s("code",null,"_config.yml",-1)),e[29]||(e[29]=n("，将")),e[30]||(e[30]=s("code",null,"theme",-1)),e[31]||(e[31]=n("的值改为你的主题文件夹名即可。具体的主题配置可以查询主题自带的文档，例如")),s("a",x,[e[26]||(e[26]=n("本站主题文档")),t(a)]),e[32]||(e[32]=n("。"))]),e[64]||(e[64]=i(`<h3 id="_3-2-markdown-引擎优化" tabindex="-1"><a class="header-anchor" href="#_3-2-markdown-引擎优化"><span>3.2 Markdown 引擎优化</span></a></h3><p>Hexo 默认搭配的 Markdown 渲染器是<code>hexo-renderer-marked</code>，但其支持的渲染格式有限，因此更推荐使用功能更加强大，渲染速度更快的<s>hexo-renderer-markdown-it 渲染器</s><sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>。经过测试，发现<code>hexo-renderer-pandoc</code>更好用，完美支持多行公式<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>！</p><p>通过以下方式安装：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> un hexo-renderer-marked <span class="token parameter variable">--save</span></span>
<span class="line"><span class="token function">npm</span> i hexo-renderer-pandoc <span class="token parameter variable">--save</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果遇到无法卸载的情况，可手动删除 Hexo 根目录下<code>node_modules/hexo-renderer-marked</code>文件夹，并且修改对应<code>package.json</code>。</p><p>在使用<code>hexo-renderer-pandoc</code>过程中，可能会遇到图片标题渲染问题，即 pandoc 引擎和主题都会为图片添加标题，从而造成渲染结果中出现 2 个标题。</p><p>解决这个问题只需要禁用 pandoc 的添加标题的功能即可<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup>：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># disable duplicated titles in images</span></span>
<span class="line"><span class="token key atrule">pandoc</span><span class="token punctuation">:</span></span>
<span class="line">  extensions<span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token string">&#39;-implicit_figures&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-obsidian-工具链" tabindex="-1"><a class="header-anchor" href="#_3-3-obsidian-工具链"><span>3.3 Obsidian 工具链</span></a></h3><p>关于写笔记的工具，这里推荐 Obsidian，能够很好的与 Hexo 进行联动兼容。</p>`,10)),s("p",null,[e[34]||(e[34]=n("首先去")),s("a",y,[e[33]||(e[33]=n("Obsidian 官网")),t(a)]),e[35]||(e[35]=n("下载 Obsidian，打开后在")),e[36]||(e[36]=s("code",null,"source",-1)),e[37]||(e[37]=n("目录下创建 Obsidian 仓库。此时我们可以直接在")),e[38]||(e[38]=s("code",null,"_posts",-1)),e[39]||(e[39]=n("下创建笔记，完美兼容 Obsidian 生态。"))]),e[65]||(e[65]=i(`<p>我们还可以使用 Obsidian 的模板系统。在<code>source/</code>目录下创建新文件夹命名为<code>template</code>。在 Obsidian 的设置里面将其设置为模板文件夹，并将 Hexo 目录下的<code>scaffolds/</code>中所有文件复制进该文件夹。</p><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/template.png" alt=""></p><p>其中<code>post.md</code>的配置可参考：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token punctuation">---</span></span>
<span class="line"><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>date<span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token key atrule">tags</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="line"><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="line"><span class="token punctuation">---</span></span>
<span class="line"></span>
<span class="line">&lt;<span class="token tag">!--more--</span><span class="token punctuation">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>&lt;!--more--&gt;</code>之前的信息会自动变为摘要，而<code>{{title}}</code>与<code>{{date}}</code>都是 Obsidian 内置属性，在插入模板时可以根据文章名和系统时间自动生成，格式可以在设置里面更改。</p><p>需要写笔记时，只需在 Obsidian 左侧点击“插入模板”即可一键配置头信息。</p><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/insert_template.png" alt=""></p><p>此时需要在 Hexo 目录下的<code>_config.yml</code>中添加<code>exclude</code>信息，避免页面构建时读取此类文件夹：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">exclude</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token string">&quot;.obsidian/**/*&quot;</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token string">&quot;template/*&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后注意，在 Obisidian 中插入图片必须使用 md 格式，即<code>![]()</code>格式，而并非 Obsidian 的<code>![[]]</code>格式，并且路径需要使用绝对路径，例如<code>\\images\\1.png</code>。</p><hr class="footnotes-sep">`,11)),s("section",j,[s("ol",w,[e[51]||(e[51]=s("li",{id:"footnote1",class:"footnote-item"},[s("p",null,[n("另外也很佩服这位博客作者，能在四天零基础构建（包括学习 git ），动手能力也了得！ "),s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎")])],-1)),s("li",H,[s("p",null,[e[41]||(e[41]=n("原先参考自")),s("a",E,[e[40]||(e[40]=n("【Hexo】选择更高级的 Markdown 渲染器_hexo-renderer-marked-CSDN 博客")),t(a)]),e[42]||(e[42]=n()),e[43]||(e[43]=s("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1))])]),s("li",B,[s("p",null,[e[45]||(e[45]=n("关于多行公式渲染折磨我非常久，最终这篇博客救了我！")),s("a",G,[e[44]||(e[44]=n("Hexo 书写 LaTeX 公式时的一些问题及解决方法 · Blowfish (jdhao.github.io)")),t(a)]),e[46]||(e[46]=n()),e[47]||(e[47]=s("a",{href:"#footnote-ref3",class:"footnote-backref"},"↩︎",-1))])]),s("li",N,[s("p",null,[s("a",O,[e[48]||(e[48]=n("Hexo NexT 使用 pandoc 插件渲染图片问题 - Flyan Lu's Blog (fanlumaster.github.io)")),t(a)]),e[49]||(e[49]=n()),e[50]||(e[50]=s("a",{href:"#footnote-ref4",class:"footnote-backref"},"↩︎",-1))])])])])])}const T=l(p,[["render",q],["__file","liyongHexoyuGithubPagedajiangerenboke.html.vue"]]),C=JSON.parse('{"path":"/blogs/liyongHexoyuGithubPagedajiangerenboke.html","title":"利用Hexo与GithubPage搭建个人博客","lang":"zh-CN","frontmatter":{"date":"2024-07-29T00:00:00.000Z","tags":["hexo","github"],"category":["教程"]},"headers":[{"level":2,"title":"1. 准备工作","slug":"_1-准备工作","link":"#_1-准备工作","children":[{"level":3,"title":"1.1 本地环境","slug":"_1-1-本地环境","link":"#_1-1-本地环境","children":[]},{"level":3,"title":"1.2 本地 ssh 连接 Github","slug":"_1-2-本地-ssh-连接-github","link":"#_1-2-本地-ssh-连接-github","children":[]}]},{"level":2,"title":"2. 网站部署","slug":"_2-网站部署","link":"#_2-网站部署","children":[{"level":3,"title":"2.1 Hexo 本地部署","slug":"_2-1-hexo-本地部署","link":"#_2-1-hexo-本地部署","children":[]},{"level":3,"title":"2.2 Hexo 部署至 Github","slug":"_2-2-hexo-部署至-github","link":"#_2-2-hexo-部署至-github","children":[]},{"level":3,"title":"2.3 常用命令","slug":"_2-3-常用命令","link":"#_2-3-常用命令","children":[]}]},{"level":2,"title":"3. 个性化配置","slug":"_3-个性化配置","link":"#_3-个性化配置","children":[{"level":3,"title":"3.1 主题选择","slug":"_3-1-主题选择","link":"#_3-1-主题选择","children":[]},{"level":3,"title":"3.2 Markdown 引擎优化","slug":"_3-2-markdown-引擎优化","link":"#_3-2-markdown-引擎优化","children":[]},{"level":3,"title":"3.3 Obsidian 工具链","slug":"_3-3-obsidian-工具链","link":"#_3-3-obsidian-工具链","children":[]}]}],"git":{"createdTime":1753255379000,"updatedTime":1753263511000,"contributors":[{"name":"Dawnfz-Lenfeng","email":"2912706234@qq.com","commits":3}]},"filePathRelative":"blogs/利用Hexo与GithubPage搭建个人博客.md"}');export{T as comp,C as data};
