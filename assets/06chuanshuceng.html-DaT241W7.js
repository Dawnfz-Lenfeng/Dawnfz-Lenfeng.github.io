import{_ as a,c as n,e,o as t}from"./app-D17wElzq.js";const l={};function s(c,i){return t(),n("div",null,i[0]||(i[0]=[e('<h1 id="_06传输层" tabindex="-1"><a class="header-anchor" href="#_06传输层"><span>06传输层</span></a></h1><h2 id="_1-无连接传输-udp" tabindex="-1"><a class="header-anchor" href="#_1-无连接传输-udp"><span>1. 无连接传输 UDP</span></a></h2><div class="custom-container definition"><p class="custom-container-title">Definition (UDP User Datagram Protocol)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>UDP 是一种“轻量级、无连接、不可靠”的网络通信协议，提供进程到进程之间的报文交付，适用于对速度要求高、但可以容忍部分丢包的应用。</p></div></div><p>报文格式，首部固定为 8 字节。</p><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250610131112394.png" alt=""></p><p>适用应用：</p><ul><li>容忍丢包但对延迟敏感的应用，如流媒体</li><li>以单次请求/响应为主的应用: 如 DNS</li></ul><h2 id="_2-面向连接传输-tcp" tabindex="-1"><a class="header-anchor" href="#_2-面向连接传输-tcp"><span>2. 面向连接传输 TCP</span></a></h2><div class="custom-container definition"><p class="custom-container-title">Definition (TCP（Transmission Control Protocol）)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>TCP 是一种面向连接、可靠、按序、基于字节流的传输层协议。</p></div></div><h3 id="_2-1-tcp-报文段结构" tabindex="-1"><a class="header-anchor" href="#_2-1-tcp-报文段结构"><span>2.1 TCP 报文段结构</span></a></h3><p>TCP 首部最小 20 字节，最大 60 字节。固定字段 20 字节，可选字段最多 40 字节，通过首部长度字段标记。</p><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250609173436324.png" alt=""></p><h3 id="_2-2-tcp-可靠数据传输" tabindex="-1"><a class="header-anchor" href="#_2-2-tcp-可靠数据传输"><span>2.2 TCP 可靠数据传输</span></a></h3><ul><li><strong>接收方</strong>： <ul><li>确认方式：采用累积确认，仅在正确、按序收到报文段后，更新确认序号；其余情况，重复前一次的确认序号（与 GBN 类似）</li><li>失序报文段处理：缓存失序的报文段（与 SR 类似）</li></ul></li><li><strong>发送方</strong>： <ul><li>发送策略：流水线式发送报文段</li><li>定时器的使用：仅对最早未确认的报文段使用一个重传定时器（与 GBN 类似）</li><li>重发策略：仅在超时后重发最早未确认的报文段（与 SR 类似,因为接收端缓存了失序的报文段）</li></ul></li></ul><h3 id="_2-3-tcp-流量控制" tabindex="-1"><a class="header-anchor" href="#_2-3-tcp-流量控制"><span>2.3 TCP 流量控制</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (零窗口通告)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>发送端收到零窗口通告时，启动一个定时器。定时器超时后，发送端发送一个零窗口探测报文段（序号为上一个段中最后一个字节的序号）。接收端在响应的报文段中通告当前接收窗口的大小。若发送端仍收到零窗口通告，重新启动定时器。</p></div></div><div class="custom-container definition"><p class="custom-container-title">Definition (糊涂窗口综合症)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>当数据的发送速度很快、而消费速度很慢时，零窗口探测的简单实现带来以下问题：</p><ul><li>接收方不断发送微小窗口通告</li><li>发送方不断发送很小的数据分组</li><li>小包问题，大量带宽被浪费（报文头开销），传输效率低下</li></ul></div></div><h3 id="_2-4-tcp-连接管理" tabindex="-1"><a class="header-anchor" href="#_2-4-tcp-连接管理"><span>2.4 TCP 连接管理</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (三次握手)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ol><li>客户 TCP 发送 SYN 报文段（SYN=1，ACK=0）</li><li>给出客户选择的起始序号 ( Initial Sequence Number, ISN )</li><li>不包含数据</li><li>服务器 TCP 发送 SYNACK 报文段（SYN=ACK=1）（服务器端分配缓存和变量）</li><li>给出服务器选择的起始序号</li><li>确认客户的起始序号</li><li>不包含数据</li><li>客户发送 ACK 报文段（SYN=0，ACK=1）（客户端分配缓存和变量）</li><li>确认服务器的起始序号</li><li>可能包含数据</li></ol></div></div>',19)]))}const o=a(l,[["render",s]]),p=JSON.parse('{"path":"/series/courses/jisuanjiwangluo/06chuanshuceng.html","title":"06传输层","lang":"zh-CN","frontmatter":{"date":"2025-05-15T00:00:00.000Z"},"headers":[{"level":2,"title":"1. 无连接传输 UDP","slug":"_1-无连接传输-udp","link":"#_1-无连接传输-udp","children":[]},{"level":2,"title":"2. 面向连接传输 TCP","slug":"_2-面向连接传输-tcp","link":"#_2-面向连接传输-tcp","children":[{"level":3,"title":"2.1 TCP 报文段结构","slug":"_2-1-tcp-报文段结构","link":"#_2-1-tcp-报文段结构","children":[]},{"level":3,"title":"2.2 TCP 可靠数据传输","slug":"_2-2-tcp-可靠数据传输","link":"#_2-2-tcp-可靠数据传输","children":[]},{"level":3,"title":"2.3 TCP 流量控制","slug":"_2-3-tcp-流量控制","link":"#_2-3-tcp-流量控制","children":[]},{"level":3,"title":"2.4 TCP 连接管理","slug":"_2-4-tcp-连接管理","link":"#_2-4-tcp-连接管理","children":[]}]}],"git":{"createdTime":1749531798000,"updatedTime":1749532294000,"contributors":[{"name":"Dawnfz-Lenfeng","email":"2912706234@qq.com","commits":2}]},"filePathRelative":"series/courses/计算机网络/06传输层.md"}');export{o as comp,p as data};
