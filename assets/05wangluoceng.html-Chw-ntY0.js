import{_ as c,c as p,e,a as s,d as t,b as n,w as i,r as o,o as d}from"./app-D-fe7J9N.js";const h={},m={class:"custom-container definition"},g={class:"custom-container-content"},u={class:"custom-container definition"},v={class:"custom-container-content"},f={class:"custom-container definition"},_={class:"custom-container-content"},b={class:"custom-container definition"},P={class:"custom-container-content"};function x(y,a){const r=o("eqn"),l=o("eq");return d(),p("div",null,[a[40]||(a[40]=e('<h1 id="_05网络层" tabindex="-1"><a class="header-anchor" href="#_05网络层"><span>05网络层</span></a></h1><h2 id="_1-网络层服务概述" tabindex="-1"><a class="header-anchor" href="#_1-网络层服务概述"><span>1. 网络层服务概述</span></a></h2><h3 id="_1-1-端系统" tabindex="-1"><a class="header-anchor" href="#_1-1-端系统"><span>1.1 端系统</span></a></h3><ul><li><strong>发送端</strong>：将传输层数据单元封装在数据包中</li><li><strong>接收端</strong>：解析接收的数据包中，取出传输层数据单元，交付给传输层</li><li><strong>路由器</strong>：检查数据包首部，转发数据包</li></ul><h3 id="_1-2-功能" tabindex="-1"><a class="header-anchor" href="#_1-2-功能"><span>1.2 功能</span></a></h3><ul><li><strong>路由</strong>：选择数据报从源端到目的端的路径</li><li><strong>转发</strong>：将数据报从路由器的输入接口传送到正确的输出接口</li></ul><h3 id="_1-3-服务" tabindex="-1"><a class="header-anchor" href="#_1-3-服务"><span>1.3 服务</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (数据报服务)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ul><li>网络层向上只提供简单灵活无连接的、尽最大努力交付的数据报服务</li><li>发送分组时不需要先建立连接，每个分组独立发送</li><li>数据报独立转发，相同源-目的的数据报可能经过不同的路径</li><li>网络层不提供服务质量的承诺</li></ul></div></div><div class="custom-container definition"><p class="custom-container-title">Definition (虚电路)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ul><li>通信之间先建立逻辑连接：在此过程中，如有需要，可以预留网络资源</li><li>结合使用可靠传输的网络协议，保证所发送的分组无差错按序到达终点</li><li>虚电路表示这只是一条逻辑上的连接，分组都沿着这条逻辑连接按照存储转发方式传送，而并不是真正建立了一条物理连接</li></ul></div></div><h2 id="_2-internet-网络层协议" tabindex="-1"><a class="header-anchor" href="#_2-internet-网络层协议"><span>2. Internet 网络层协议</span></a></h2><p>Interner 协议功能</p><ul><li>寻址</li><li>分片</li></ul><h3 id="_2-1-ipv4-协议" tabindex="-1"><a class="header-anchor" href="#_2-1-ipv4-协议"><span>2.1 IPv4 协议</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (IPv4 分组格式)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>IP 分组由首部和数据两部分组成，首部的前一部分是固定长度，共 20 字节，是所有 IP 分组必须具有的，在首部的固定部分的后面是一些可选字段，其长度是可变的</p></div></div><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250417111132795.png" alt=""></p><ul><li><strong>版本</strong>：占 4bit，指 IP 协议的版本，目前的 IP 协议版本号为 4 (即 IPv4）</li><li><strong>首部长度</strong>：4bit，值为 5~15 个单位(4 B)，因此 IP 分组首部长度最大值为 60 字节</li><li><strong>区分服务</strong>：8bit，最初为服务类型(没用)；现在前 6 位标记服务类别，后 2 位携带显式拥塞信息</li><li><strong>总长</strong>：16bit，指首部和数据之和，单位为字节，因此分组的最大长度为 65535 字节。注意不要超过最大传送单元 MTU</li><li><strong>标识</strong>：16bit，分组标识，同一数据报的分片使用同一标识</li><li><strong>标志位</strong>：3bit，第 1 位未用，第 2 位 DF 代表不要分片，第 3 位 MF 代表还有分片</li><li><strong>片偏移</strong>：占 13bit，数据报在分片后，本分片在原数据报中的相对位置；片偏移以 8 B 为偏移单位，除了最后一个分片，每个分片长度一定是 8B 的整数倍</li><li><strong>生存时间</strong>：记为 TTL (Time To Live)，8bit， 表示数据报在网络中的生命周期，用通过路由器的数量来计量，即跳数（每经过一个路由器会减 1）</li><li><strong>协议</strong>：8bit，字段指出分组的数据使用何种协议，以便目的主机 IP 层将数据上交给哪个处理过程</li><li><strong>首部校验和</strong>：16bit，只检验数据报的首部，不包括数据部分</li><li><strong>源地址</strong>、<strong>目的地址</strong>：各 4 字节，IP 地址</li><li><strong>选项</strong>：可扩充部分，具有可变长度，定义了安全性、严格源路由、松散源路由、记录路由、时间戳等选项。</li><li><strong>填充</strong>：用全 0 的填充字段补齐为 4 字节的整数倍</li></ul><h3 id="_2-2-ip-地址" tabindex="-1"><a class="header-anchor" href="#_2-2-ip-地址"><span>2.2 IP 地址</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (IP 地址)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>网络上的每一台主机（或路由器）的每一个接口都会分配一个全球唯一的 32 位（4 字节）的标识符，由网络号和主机号组成</p></div></div><h4 id="_2-2-1-地址分类" tabindex="-1"><a class="header-anchor" href="#_2-2-1-地址分类"><span>2.2.1 地址分类</span></a></h4><ul><li><strong>A 类</strong>：<code>10.0.0.0</code>~<code>126.255.255.255</code>，默认子网掩码：<code>255.0.0.0</code></li><li><strong>B 类</strong>：<code>128.0.0.0</code>~<code>191.255.255.255</code>，默认子网掩码：<code>255.255.0.0</code></li><li><strong>C 类</strong>：<code>192.0.0.0</code>~<code>223.255.255.255</code>，默认子网掩码：<code>255.255.255.0</code></li><li><strong>D 类</strong>：<code>224.0.0.0</code>~<code>239.255.255.255</code>，用于多播</li><li><strong>E 类</strong>：<code>240.0.0.0</code>~<code>255.255.255.255</code>，保留</li></ul><p><strong>私有 IP 地址</strong></p><ul><li><strong>A 类</strong>：<code>10.0.0.0</code>~<code>10.255.255.255</code></li><li><strong>B 类</strong>：<code>172.16.0.0</code>~<code>172.31.255.255</code></li><li><strong>C 类</strong>：<code>192.168.0.0</code>~<code>192.168.255.255</code></li></ul><h4 id="_2-2-2-子网划分" tabindex="-1"><a class="header-anchor" href="#_2-2-2-子网划分"><span>2.2.2 子网划分</span></a></h4>',23)),s("div",m,[a[3]||(a[3]=s("p",{class:"custom-container-title"},"Definition (子网划分)",-1)),s("div",g,[a[2]||(a[2]=s("h1",{id:"",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#"},[s("span")])],-1)),s("p",null,[a[1]||(a[1]=t("在网络内部将一个网络块进行划分以供多个内部网络使用，对外仍是一个网络")),s("section",null,[n(r,null,{default:i(()=>a[0]||(a[0]=[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"IP")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"{"),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7224em","vertical-align":"-0.0391em"}}),s("span",{class:"mord text"},[s("span",{class:"mord cjk_fallback"},"网络号")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">")]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7335em","vertical-align":"-0.1944em"}}),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7224em","vertical-align":"-0.0391em"}}),s("span",{class:"mord text"},[s("span",{class:"mord cjk_fallback"},"子网号")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">")]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7335em","vertical-align":"-0.1944em"}}),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7224em","vertical-align":"-0.0391em"}}),s("span",{class:"mord text"},[s("span",{class:"mord cjk_fallback"},"主机号")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">")]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mclose"},"}")])])])],-1)])),_:1,__:[0]})])])])]),a[41]||(a[41]=e('<div class="custom-container definition"><p class="custom-container-title">Definition (CIDR（Classless Inter-Domain Routing）)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>IP 地址后加上“/”，然后写上网络前缀的位数（可以任意长度）</p></div></div><h4 id="_2-2-3-路由聚合" tabindex="-1"><a class="header-anchor" href="#_2-2-3-路由聚合"><span>2.2.3 路由聚合</span></a></h4><div class="custom-container definition"><p class="custom-container-title">Definition (路由聚合)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>把网络前缀相同的连续 IP 地址组成的地址块称为 CIDR 地址块，一个 CIDR 地址块可以表示很多地址，这种地址的聚合常称为路由聚合。在查找路由表时使用最长前缀匹配。</p></div></div><h3 id="_2-3-dhcp" tabindex="-1"><a class="header-anchor" href="#_2-3-dhcp"><span>2.3 DHCP</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (DHCP (Dynamic Host Configuration Protocol))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>当主机加入 IP 网络，允许主机从 DHCP 服务器动态获取 IP 地址，完整流程为：</p><ol><li>DHCP Discover 广播</li><li>DHCP offer 单播</li><li>DHCP Request 广播</li><li>DHCP ACK 单播</li></ol></div></div><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250510194323299.png" alt=""></p><h3 id="_2-4-arp" tabindex="-1"><a class="header-anchor" href="#_2-4-arp"><span>2.4 ARP</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (ARP (Address Resolution Protocol))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ul><li>A 已知 B 的 IP 地址，需要获得 B 的 MAC 地址</li><li>如果 A 的 <strong>ARP</strong> 表中缓存 B 的 IP 地址与 MAC 地址的映射关系，则直接从 ARP 表中获取</li><li>如果为缓存，则 A 广播包含 B 的 IP 地址的 ARP Query 分组</li><li>B 接收到 ARP Query 分组后，将自己的 MAC 地址发送给 A</li><li>A 在 <strong>ARP</strong> 表中缓存 B 的 IP 地址和 MAC 地址的映射关系</li></ul></div></div><h3 id="_2-5-nat" tabindex="-1"><a class="header-anchor" href="#_2-5-nat"><span>2.5 NAT</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (NAT (Network Address Translation))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>网络地址转换用于解决 IPv4 地址不足的问题，是一种将私有(保留)地址转化为公有 IP 地址的转换技术</p></div></div><h3 id="_2-6-icmp" tabindex="-1"><a class="header-anchor" href="#_2-6-icmp"><span>2.6 ICMP</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (ICMP (Internet Control Message Protocol))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>ICMP 允许主机或路由器报告差错情况和提供有关异常情况的报告，由主机和路由器用于网络层信息的通信。ICMP 报文携带在 IP 数据报中: IP 上层协议号为 1</p></div></div><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250510205845880.png" alt=""></p><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250510205754233.png" alt=""></p><h2 id="_3-路由算法" tabindex="-1"><a class="header-anchor" href="#_3-路由算法"><span>3. 路由算法</span></a></h2><h3 id="_3-1-最短路径算法-dijkstra-算法" tabindex="-1"><a class="header-anchor" href="#_3-1-最短路径算法-dijkstra-算法"><span>3.1 最短路径算法 (Dijkstra 算法)</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (Dijkstra 算法)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ol><li>通过 Dijkstra 计算图 G 中的最短路径时，需要指定一个起点 A(即从顶点 A 开始计算)。</li><li>此外，引进两个集合 S 和 U。S 的作用是记录已求出最短路径的顶点(以及相应的最短路径长度)，如图中黑色点。而 U 则是记录还未求出最短路径的顶点(以及该顶点到起点 A 的距离)，如图中空心点。</li><li>初始时，数组 S 中只有起点 A;数组 U 中是除起点 A 之外的顶点，并且数组 U 中记录各顶点到起点 A 的距离。如 果顶点与起点 A 不相邻，距离为无穷大。</li><li>然后，从数组 U 中找出路径最短的顶点 K，并将其加入到数组 S 中;同时，从数组 U 中移除顶点 K。接着，更新 数组 U 中的各顶点到起点 A 的距离。</li><li>重复第 4 步操作，直到遍历完所有顶点</li></ol></div></div><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250510211144233.png" alt=""></p><h3 id="_3-2-距离向量路由" tabindex="-1"><a class="header-anchor" href="#_3-2-距离向量路由"><span>3.2 距离向量路由</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (距离向量路由)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>每个路由器维护一张表,表中给出了到每个目的地的已知最佳距离和 线路,并通过与相邻路由器交换距离信息来更新表</p></div></div><p><img src="https://raw.githubusercontent.com/Dawnfz-Lenfeng/imgs/master/20250510213745844.png" alt=""></p><h3 id="_3-3-链路状态路由" tabindex="-1"><a class="header-anchor" href="#_3-3-链路状态路由"><span>3.3 链路状态路由</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (链路状态路由)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ol><li>发现邻居，了解他们的网络地址</li><li>设置到每个邻居的成本度量</li><li>构造一个分组,分组中包含刚收到的所有信息</li><li>将此分组发送给其他的路由器</li><li>计算到其他路由器的最短路径</li></ol></div></div><h3 id="_3-4-层次路由" tabindex="-1"><a class="header-anchor" href="#_3-4-层次路由"><span>3.4 层次路由</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (层次路由)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>将网络分为多个区域，每个区域内部的路由信息只在本区域传播，而区域间由“骨干层”或“主干路由器”负责沟通。</p></div></div><h3 id="_3-5-广播路由" tabindex="-1"><a class="header-anchor" href="#_3-5-广播路由"><span>3.5 广播路由</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (泛洪 (flooding))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>将每个数据包发送到除了入端口外的所有端口</p></div></div><ul><li><strong>序号控制泛洪</strong>：用序号控制，序号表中有该数据包的记录则不转发</li><li><strong>逆向路径转发</strong>：不是由最佳路径来的不转发</li><li><strong>生成树</strong>：源节点向所有属于该生成树的特定链路发送分组</li></ul><h3 id="_3-6-组播路由" tabindex="-1"><a class="header-anchor" href="#_3-6-组播路由"><span>3.6 组播路由</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (IGMP (Internet Group Management Protocol))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>常用组播地址段 <code>224.0.0.0/24</code></p><ul><li><code>224.0.0.1</code>，LAN 上所有设备</li><li><code>224.0.0.2</code>，LAN 上所有路由器</li><li><code>224.0.0.5</code>，LAN 上所有 OSPF 路由器</li><li><code>224.0.0.251</code>，LAN 上所有 DNS 服务器</li></ul></div></div><h3 id="_3-7-选播路由" tabindex="-1"><a class="header-anchor" href="#_3-7-选播路由"><span>3.7 选播路由</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (选播)</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>将数据包传送给最近的一个组成员</p></div></div><h2 id="_4-internet-路由协议" tabindex="-1"><a class="header-anchor" href="#_4-internet-路由协议"><span>4. Internet 路由协议</span></a></h2><h3 id="_4-1-ospf-内部网关路由协议" tabindex="-1"><a class="header-anchor" href="#_4-1-ospf-内部网关路由协议"><span>4.1 OSPF-内部网关路由协议</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (OSPF (Open Shortest Path First))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ul><li><strong>邻居发现</strong>：使用 Hello 报文发现与自己直连的 OSPF 路由器</li><li><strong>链路状态通告（LSA）</strong>：路由器通过发送 Link State Advertisement（LSA）描述自己的连接状态，所有路由器将收到的 LSA 存储于本地的链路状态数据库（LSDB）中</li><li><strong>构建拓扑图与路径计算</strong>：每台路由器使用 SPF 算法（Dijkstra）基于 LSDB 计算出到各目的网络的最短路径</li></ul></div></div><h3 id="_4-2-rip-内部网关路由协议" tabindex="-1"><a class="header-anchor" href="#_4-2-rip-内部网关路由协议"><span>4.2 RIP-内部网关路由协议</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (RIP (Routing Information Protocol))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ul><li>每个路由器维护一张“到所有网络的跳数表”</li><li>每 30 秒向邻居发送整个路由表（UDP 广播）</li><li>收到邻居的路由表更新自己的表</li><li>不区分链路带宽，只看“跳数”</li></ul></div></div><h3 id="_4-3-bgp-外部网关路由协议" tabindex="-1"><a class="header-anchor" href="#_4-3-bgp-外部网关路由协议"><span>4.3 BGP-外部网关路由协议</span></a></h3><ul><li><strong>自治系统</strong>（AS）：每个 AS 是一个独立管理的网络</li><li><strong>BGP 会话类型</strong>： <ul><li><strong>eBGP（External BGP）</strong>：不同 AS 之间的 BGP 会话（例如：AS100 ↔ AS200）。</li><li><strong>iBGP（Internal BGP）</strong>：同一 AS 内部的 BGP 会话（例如：AS100 内的两台路由器）。</li></ul></li><li><strong>BGP 邻居（Peer）</strong>：- 通过  <strong>TCP 端口 179</strong>  建立邻居关系，需手动配置对方 IP 和 ASN。</li></ul><div class="custom-container definition"><p class="custom-container-title">Definition (BGP (Border Gateway Protocol))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ol><li><strong>建立邻居关系</strong>：发起方（Initiator）尝试与对端（Listener）建立 TCP 连接，双方发送 BGP <code>Open</code> 消息，包含 ASN、BGP 版本、Router ID 等信息。若 ASN、认证信息等一致，进入  <code>Established</code>  状态，开始路由交换。</li><li><strong>路由通告与学习</strong>：发送 <code>Update</code> 消息。每个 <code>Update</code> 消息包含</li><li><strong>NLRI（Network Layer Reachability Information）</strong>，即要通告的 IP 前缀（如  <code>192.168.1.0/24</code>）</li><li><strong>路径属性（Path Attributes）</strong>，即描述路由的元数据（如 AS_PATH、NEXT_HOP 等）</li><li><strong>撤销路由（Withdrawn Routes）</strong>， 即标记不再可达的路由。</li><li><strong>BGP 路由决策</strong>：当收到多条到达同一目的地的路由时，BGP 按以下顺序选择最优路径（<strong>Best Path Selection</strong>）：LOCAL_PREF &gt; AS_PATH 长度 &gt; ORIGIN 类型 &gt; MED &gt; eBGP 优于 iBGP</li></ol></div></div><h3 id="_4-4-标签交换和-mpls" tabindex="-1"><a class="header-anchor" href="#_4-4-标签交换和-mpls"><span>4.4 标签交换和 MPLS</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (MPLS (MultiProtocol Label Switching))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><ol><li><strong>标签分发协议（LDP）</strong>：LSR 之间通过 LDP 协议交换标签绑定信息（将 IP 前缀映射到标签）。</li><li><strong>数据转发</strong></li><li><strong>入口 LER（Ingress LER）</strong>：收到原始 IP 数据包后，根据目标 IP 查找对应的标签。将标签封装到数据包头部（称为  <strong>压标签</strong>），形成 MPLS 帧。</li><li><strong>核心 LSR</strong>：根据入标签（Incoming Label）查找转发表，替换为出标签（Outgoing Label），并从指定接口转发。<strong>转发决策仅依赖标签，不解析 IP 头部</strong>。</li><li><strong>出口 LER（Egress LER）</strong>：移除标签（称为  <strong>弹标签</strong>），恢复原始 IP 数据包，转发到目标网络。</li></ol></div></div><h2 id="_5-网络层的流量管理" tabindex="-1"><a class="header-anchor" href="#_5-网络层的流量管理"><span>5. 网络层的流量管理</span></a></h2><h3 id="_5-1-ecn" tabindex="-1"><a class="header-anchor" href="#_5-1-ecn"><span>5.1 ECN</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (ECN (Explicit Congestion Notification))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>在 IP 包头中记录数据包是否经历了拥塞。在数据包转发过程中，路由器可以在包头中标记为经历拥塞，然后接收方在它的下一个应答数据包里回显该标记作为显式拥塞信号</p></div></div><h3 id="_5-2-pfc" tabindex="-1"><a class="header-anchor" href="#_5-2-pfc"><span>5.2 PFC</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (PFC (Priority-based Flow Control))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>以太网帧通过 VLAN tag（802.1Q）中的 PCP 字段来标识优先级（0~7，一共 8 个等级）。每个优先级可以独立启用或禁用流控。当某个优先级的接收队列即将溢出时，交换机会向上游设备发送 <strong>PFC 帧</strong>（也称为优先级 PAUSE 帧），只要求暂停该优先级的发送。上游设备接收到该帧后，仅暂停发送该优先级的流量，而其他优先级的流量可继续发送。</p></div></div><h3 id="_5-3-red" tabindex="-1"><a class="header-anchor" href="#_5-3-red"><span>5.3 RED</span></a></h3>',48)),s("div",u,[a[24]||(a[24]=s("p",{class:"custom-container-title"},"Definition (RED (Random Early Detection))",-1)),s("div",v,[a[23]||(a[23]=s("h1",{id:"",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#"},[s("span")])],-1)),s("ul",null,[s("li",null,[a[6]||(a[6]=t("使路由器的队列维持两个参数,即队列长度最小门限 ")),n(l,null,{default:i(()=>a[4]||(a[4]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"TH")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3175em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mop mtight"},[s("span",{class:"mtight"},"m"),s("span",{class:"mtight"},"i"),s("span",{class:"mtight"},"n")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])],-1)])),_:1,__:[4]}),a[7]||(a[7]=t(" 和最大门限 ")),n(l,null,{default:i(()=>a[5]||(a[5]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"TH")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mop mtight"},[s("span",{class:"mtight"},"m"),s("span",{class:"mtight"},"a"),s("span",{class:"mtight"},"x")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])],-1)])),_:1,__:[5]})]),s("li",null,[a[9]||(a[9]=t("对每一个到达的数据报都先计算平均队列长度 ")),n(l,null,{default:i(()=>a[8]||(a[8]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"AV")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])],-1)])),_:1,__:[8]})]),s("li",null,[a[11]||(a[11]=t("若平均队列长度小于最小门限 ")),n(l,null,{default:i(()=>a[10]||(a[10]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"TH")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3175em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mop mtight"},[s("span",{class:"mtight"},"m"),s("span",{class:"mtight"},"i"),s("span",{class:"mtight"},"n")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])],-1)])),_:1,__:[10]}),a[12]||(a[12]=t(" ，则将新到达的数据报放入队列进行排队"))]),s("li",null,[a[14]||(a[14]=t("若平均队列长度超过最大门限 ")),n(l,null,{default:i(()=>a[13]||(a[13]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"TH")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mop mtight"},[s("span",{class:"mtight"},"m"),s("span",{class:"mtight"},"a"),s("span",{class:"mtight"},"x")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])],-1)])),_:1,__:[13]}),a[15]||(a[15]=t("，则将新到达的数据报丢弃"))]),s("li",null,[a[19]||(a[19]=t("若平均队列长度在最小门限 ")),n(l,null,{default:i(()=>a[16]||(a[16]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"TH")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3175em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mop mtight"},[s("span",{class:"mtight"},"m"),s("span",{class:"mtight"},"i"),s("span",{class:"mtight"},"n")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])],-1)])),_:1,__:[16]}),a[20]||(a[20]=t(" 和最大门限 ")),n(l,null,{default:i(()=>a[17]||(a[17]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"TH")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mop mtight"},[s("span",{class:"mtight"},"m"),s("span",{class:"mtight"},"a"),s("span",{class:"mtight"},"x")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])],-1)])),_:1,__:[17]}),a[21]||(a[21]=t(" 之间,则按照某一概率 ")),n(l,null,{default:i(()=>a[18]||(a[18]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p")])])],-1)])),_:1,__:[18]}),a[22]||(a[22]=t(" 将新到达的数据报丢弃"))])])])]),a[42]||(a[42]=e('<h2 id="_6-服务质量-qos" tabindex="-1"><a class="header-anchor" href="#_6-服务质量-qos"><span>6. 服务质量 QoS</span></a></h2><h3 id="_6-1-流量整形" tabindex="-1"><a class="header-anchor" href="#_6-1-流量整形"><span>6.1 流量整形</span></a></h3><p><strong>流量整形</strong>(traffic shaping)：限制流出某一网络的某一连接的流量与突发,使这类报文以比较均匀的速度向外发送</p><h3 id="_6-2-漏桶" tabindex="-1"><a class="header-anchor" href="#_6-2-漏桶"><span>6.2 漏桶</span></a></h3><div class="custom-container definition"><p class="custom-container-title">Definition (漏桶算法 (Leaky Bucket Algorithm))</p><div class="custom-container-content"><h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p>将用户发出的不平滑的数据分组流转变成网络中平滑的数据分组流 。流入速率不固定，均匀流出，桶满则溢出</p></div></div><h3 id="_6-3-令牌桶" tabindex="-1"><a class="header-anchor" href="#_6-3-令牌桶"><span>6.3 令牌桶</span></a></h3>',6)),s("div",f,[a[29]||(a[29]=s("p",{class:"custom-container-title"},"Definition (令牌桶算法 (Token Bucket Algorithm))",-1)),s("div",_,[a[28]||(a[28]=s("h1",{id:"",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#"},[s("span")])],-1)),s("p",null,[a[26]||(a[26]=t("漏桶存放令牌，每 ")),n(l,null,{default:i(()=>a[25]||(a[25]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord"},"Δ"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])],-1)])),_:1,__:[25]}),a[27]||(a[27]=t(" 秒 (周期性)产生一个令牌，令牌累积到漏桶上界时就不再增加；分组传输之前必须获得一个令牌，传输之后删除该令牌"))])])]),s("div",b,[a[39]||(a[39]=s("p",{class:"custom-container-title"},"Definition (令牌桶最大突发时间)",-1)),s("div",P,[a[38]||(a[38]=s("h1",{id:"",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#"},[s("span")])],-1)),s("p",null,[a[34]||(a[34]=t("设令牌桶容量为 ")),n(l,null,{default:i(()=>a[30]||(a[30]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])],-1)])),_:1,__:[30]}),a[35]||(a[35]=t(" 字节，令牌到达速率为 ")),n(l,null,{default:i(()=>a[31]||(a[31]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R")])])],-1)])),_:1,__:[31]}),a[36]||(a[36]=t(" 字节/秒，最大输出速率为 ")),n(l,null,{default:i(()=>a[32]||(a[32]=[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M")])])],-1)])),_:1,__:[32]}),a[37]||(a[37]=t(" 字节/秒。此时最大突发时间")),s("section",null,[n(r,null,{default:i(()=>a[33]||(a[33]=[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.1297em","vertical-align":"-0.7693em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3603em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7693em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])],-1)])),_:1,__:[33]})])])])]),a[43]||(a[43]=e('<h3 id="_6-4-数据包调度" tabindex="-1"><a class="header-anchor" href="#_6-4-数据包调度"><span>6.4 数据包调度</span></a></h3><ul><li><strong>先来先服务</strong>（FCFS）</li><li><strong>公平队列</strong>（Fair Queueing）</li><li><strong>加权公平队列</strong>（Weighted Fair Queueing）</li><li><strong>优先级调度</strong>（Priority Scheduling）</li></ul>',2))])}const D=c(h,[["render",x]]),I=JSON.parse('{"path":"/series/courses/jisuanjiwangluo/05wangluoceng.html","title":"05网络层","lang":"zh-CN","frontmatter":{"date":"2025-04-12T00:00:00.000Z"},"headers":[{"level":2,"title":"1. 网络层服务概述","slug":"_1-网络层服务概述","link":"#_1-网络层服务概述","children":[{"level":3,"title":"1.1 端系统","slug":"_1-1-端系统","link":"#_1-1-端系统","children":[]},{"level":3,"title":"1.2 功能","slug":"_1-2-功能","link":"#_1-2-功能","children":[]},{"level":3,"title":"1.3 服务","slug":"_1-3-服务","link":"#_1-3-服务","children":[]}]},{"level":2,"title":"2. Internet 网络层协议","slug":"_2-internet-网络层协议","link":"#_2-internet-网络层协议","children":[{"level":3,"title":"2.1 IPv4 协议","slug":"_2-1-ipv4-协议","link":"#_2-1-ipv4-协议","children":[]},{"level":3,"title":"2.2 IP 地址","slug":"_2-2-ip-地址","link":"#_2-2-ip-地址","children":[]},{"level":3,"title":"2.3 DHCP","slug":"_2-3-dhcp","link":"#_2-3-dhcp","children":[]},{"level":3,"title":"2.4 ARP","slug":"_2-4-arp","link":"#_2-4-arp","children":[]},{"level":3,"title":"2.5 NAT","slug":"_2-5-nat","link":"#_2-5-nat","children":[]},{"level":3,"title":"2.6 ICMP","slug":"_2-6-icmp","link":"#_2-6-icmp","children":[]}]},{"level":2,"title":"3. 路由算法","slug":"_3-路由算法","link":"#_3-路由算法","children":[{"level":3,"title":"3.1 最短路径算法 (Dijkstra 算法)","slug":"_3-1-最短路径算法-dijkstra-算法","link":"#_3-1-最短路径算法-dijkstra-算法","children":[]},{"level":3,"title":"3.2 距离向量路由","slug":"_3-2-距离向量路由","link":"#_3-2-距离向量路由","children":[]},{"level":3,"title":"3.3 链路状态路由","slug":"_3-3-链路状态路由","link":"#_3-3-链路状态路由","children":[]},{"level":3,"title":"3.4 层次路由","slug":"_3-4-层次路由","link":"#_3-4-层次路由","children":[]},{"level":3,"title":"3.5 广播路由","slug":"_3-5-广播路由","link":"#_3-5-广播路由","children":[]},{"level":3,"title":"3.6 组播路由","slug":"_3-6-组播路由","link":"#_3-6-组播路由","children":[]},{"level":3,"title":"3.7 选播路由","slug":"_3-7-选播路由","link":"#_3-7-选播路由","children":[]}]},{"level":2,"title":"4. Internet 路由协议","slug":"_4-internet-路由协议","link":"#_4-internet-路由协议","children":[{"level":3,"title":"4.1 OSPF-内部网关路由协议","slug":"_4-1-ospf-内部网关路由协议","link":"#_4-1-ospf-内部网关路由协议","children":[]},{"level":3,"title":"4.2 RIP-内部网关路由协议","slug":"_4-2-rip-内部网关路由协议","link":"#_4-2-rip-内部网关路由协议","children":[]},{"level":3,"title":"4.3 BGP-外部网关路由协议","slug":"_4-3-bgp-外部网关路由协议","link":"#_4-3-bgp-外部网关路由协议","children":[]},{"level":3,"title":"4.4 标签交换和 MPLS","slug":"_4-4-标签交换和-mpls","link":"#_4-4-标签交换和-mpls","children":[]}]},{"level":2,"title":"5. 网络层的流量管理","slug":"_5-网络层的流量管理","link":"#_5-网络层的流量管理","children":[{"level":3,"title":"5.1 ECN","slug":"_5-1-ecn","link":"#_5-1-ecn","children":[]},{"level":3,"title":"5.2 PFC","slug":"_5-2-pfc","link":"#_5-2-pfc","children":[]},{"level":3,"title":"5.3 RED","slug":"_5-3-red","link":"#_5-3-red","children":[]}]},{"level":2,"title":"6. 服务质量 QoS","slug":"_6-服务质量-qos","link":"#_6-服务质量-qos","children":[{"level":3,"title":"6.1 流量整形","slug":"_6-1-流量整形","link":"#_6-1-流量整形","children":[]},{"level":3,"title":"6.2 漏桶","slug":"_6-2-漏桶","link":"#_6-2-漏桶","children":[]},{"level":3,"title":"6.3 令牌桶","slug":"_6-3-令牌桶","link":"#_6-3-令牌桶","children":[]},{"level":3,"title":"6.4 数据包调度","slug":"_6-4-数据包调度","link":"#_6-4-数据包调度","children":[]}]}],"git":{"createdTime":1744868692000,"updatedTime":1749531798000,"contributors":[{"name":"Dawnfz-Lenfeng","email":"2912706234@qq.com","commits":3}]},"filePathRelative":"series/courses/计算机网络/05网络层.md"}');export{D as comp,I as data};
